<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.i9.xiaofang.service.repository.mapper.ManagerMapper" >
  <resultMap id="BaseResultMap" type="org.i9.xiaofang.service.repository.model.Manager" >
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="provincial" jdbcType="VARCHAR" property="provincial" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="county" jdbcType="VARCHAR" property="county" />
    <result column="positionAddr" jdbcType="VARCHAR" property="positionAddr" />
    <result column="idCard" jdbcType="VARCHAR" property="idCard" />
    <result column="useType" jdbcType="INTEGER" property="useType" />
    <result column="audiType" jdbcType="INTEGER" property="audiType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, password, name, createtime, phone, provincial, city, county, positionAddr,
    idCard, useType, audiType
  </sql>
  <sql id="Query_By_Dto_Where_Clause">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <if test="example.name != null and example.name != ''">
        OR (name like CONCAT('%',CONCAT('${example.name}','%'))
      </if>
      <if test="example.phone != null and example.phone != ''">
        OR phone like CONCAT('%',CONCAT('${example.phone}','%')))
      </if>
      <if test="example.startTime != null and example.startTime != ''">
        AND createTime &gt;= #{example.startTime}
      </if>
      <if test="example.endTime != null and example.endTime != ''">
        AND createTime &lt;= DATE_ADD(#{example.endTime},INTERVAL 1 DAY)
      </if>
    </trim>
  </sql>
  <select id="selectByExample" parameterType="org.i9.xiaofang.service.repository.model.ManagerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_manager
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_manager
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.i9.xiaofang.service.repository.model.ManagerExample">
    delete from t_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.i9.xiaofang.service.repository.model.Manager">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_manager (username, password, name,
    createtime, phone, provincial,
    city, county, positionAddr,
    idCard, useType, audiType
    )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
    #{createtime,jdbcType=TIMESTAMP}, #{phone,jdbcType=VARCHAR}, #{provincial,jdbcType=VARCHAR},
    #{city,jdbcType=VARCHAR}, #{county,jdbcType=VARCHAR}, #{positionAddr,jdbcType=VARCHAR},
    #{idCard,jdbcType=VARCHAR}, #{useType,jdbcType=INTEGER}, #{audiType,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="org.i9.xiaofang.service.repository.model.Manager">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_manager
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="provincial != null">
        provincial,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="county != null">
        county,
      </if>
      <if test="positionAddr != null">
        positionAddr,
      </if>
      <if test="idCard != null">
        idCard,
      </if>
      <if test="useType != null">
        useType,
      </if>
      <if test="audiType != null">
        audiType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="provincial != null">
        #{provincial,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null">
        #{county,jdbcType=VARCHAR},
      </if>
      <if test="positionAddr != null">
        #{positionAddr,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="useType != null">
        #{useType,jdbcType=INTEGER},
      </if>
      <if test="audiType != null">
        #{audiType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" resultType="int">
    select count(*) from t_manager
    <if test="_parameter != null">
      <include refid="Query_By_Dto_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_manager
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.provincial != null">
        provincial = #{record.provincial,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.county != null">
        county = #{record.county,jdbcType=VARCHAR},
      </if>
      <if test="record.positionAddr != null">
        positionAddr = #{record.positionAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        idCard = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.useType != null">
        useType = #{record.useType,jdbcType=INTEGER},
      </if>
      <if test="record.audiType != null">
        audiType = #{record.audiType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_manager
    set id = #{record.id,jdbcType=INTEGER},
    username = #{record.username,jdbcType=VARCHAR},
    password = #{record.password,jdbcType=VARCHAR},
    name = #{record.name,jdbcType=VARCHAR},
    createtime = #{record.createtime,jdbcType=TIMESTAMP},
    phone = #{record.phone,jdbcType=VARCHAR},
    provincial = #{record.provincial,jdbcType=VARCHAR},
    city = #{record.city,jdbcType=VARCHAR},
    county = #{record.county,jdbcType=VARCHAR},
    positionAddr = #{record.positionAddr,jdbcType=VARCHAR},
    idCard = #{record.idCard,jdbcType=VARCHAR},
    useType = #{record.useType,jdbcType=INTEGER},
    audiType = #{record.audiType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.i9.xiaofang.service.repository.model.Manager">
    update t_manager
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null and createtime !=''">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="provincial != null">
        provincial = #{provincial,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null">
        county = #{county,jdbcType=VARCHAR},
      </if>
      <if test="positionAddr != null">
        positionAddr = #{positionAddr,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        idCard = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="useType != null">
        useType = #{useType,jdbcType=INTEGER},
      </if>
      <if test="audiType != null">
        audiType = #{audiType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.i9.xiaofang.service.repository.model.Manager">
    update t_manager
    set username = #{username,jdbcType=VARCHAR},
    password = #{password,jdbcType=VARCHAR},
    name = #{name,jdbcType=VARCHAR},
    createtime = #{createtime,jdbcType=TIMESTAMP},
    phone = #{phone,jdbcType=VARCHAR},
    provincial = #{provincial,jdbcType=VARCHAR},
    city = #{city,jdbcType=VARCHAR},
    county = #{county,jdbcType=VARCHAR},
    positionAddr = #{positionAddr,jdbcType=VARCHAR},
    idCard = #{idCard,jdbcType=VARCHAR},
    useType = #{useType,jdbcType=INTEGER},
    audiType = #{audiType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getManagerByName" parameterType="string" resultType="org.i9.xiaofang.service.repository.model.Manager">
    select
    <include refid="Base_Column_List" />
    from t_manager
    where username = #{username,jdbcType=VARCHAR}
  </select>

  <select id="selectBylimitPage" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from t_manager
    <if test="_parameter != null">
      <include refid="Query_By_Dto_Where_Clause" />
    </if>
    <if test="example.orderByClause != null and example.orderByClause != ''">
      order by ${example.orderByClause}
    </if>
    limit #{offset},#{limit}
  </select>
  <delete id="delManagerByIds" parameterType="java.util.List">
    delete from t_manager where id in
    <foreach collection="asList" index="index" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </delete>
</mapper>